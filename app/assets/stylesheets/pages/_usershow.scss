.dashboard-body-content {
  padding-top: 10vh;
  justify-content: center;
}

.dashboard-flex {
  padding-top: 3vh;
  display: flex;
  justify-content: center;
  position: relative;
}

.dashboard-title {
  justify-content: center;
  text-align: center;
}

.button-show {
  text-align: center;
}

.dashboard-score-section {
  justify-content: right;
  align-items: right;
  padding-bottom: 10vh;
}

.dashboard-link-section {
  justify-content: left;
  align-items: left;
}

.dashboard-link-card {
  border: 1px solid white;
  padding: 20px;
  border-radius: 4px;
  top: 15vh;
  position: sticky;
}

.dashboard-questionnaire-links {
  display: flex;
  justify-content: space-between;
}

.scoreChart {
  p {
  font-size: 2rem;
  color: white;
  margin-top: 0;
  margin-bottom: 0;
}
  position: relative;
}

.scoreChart {
  width: 60vw;
}

.chart-container {
  display: flex;
  align-items: center;
}
.social {
  // position: absolute;
  // right: 5px;
  // top: 500px;
  border:2px solid #ffffff;
  width: 100px;
  height: 100px;
  transition: 1s linear;
  // transition: height 1s linear;
}

.anotherscore {
  position: absolute;
  right: 1px;
  top: 200px;
  width: 100px;
  max-width: 100px;
  margin: 0px;
}

.plus {
  font-size: 4em;
  text-align: right;
  color: white;
  margin: 0px;
  a {
    color: white;
  }
}

.expand {
  width: 1000px;
  height: 200px;
  border:2px solid #ffffff;
}

#displaytypewriter {
  text-align: left;
}

#denominator {
  border-top: 4px solid rgba(255,255,255, 18);
}
.absolute-center {
  position:absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -5%);
}

.text-center{
  text-align: center;
}
h2 {
    text-align: center;
  }

.travelHistoryChart {
  display: none;
}
.homeHistoryChart {
  display: none;
}
.consumptionHistoryChart {
  display: none;
}

.societyHistoryChart {
  display: none;
}
.scoreChart {
  display: block;
  opacity: 1;
  // transition: 2s;
}

.scoreHistoryChart {
  display: block;
}

.show {
  display: block;
}


/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}

@-webkit-keyframes fadeOut { from { opacity:1; } to { opacity:0; } }
@-moz-keyframes fadeOut { from { opacity:1; } to { opacity:0; } }
@keyframes fadeOut { from { opacity:1; } to { opacity:0; } }

.fade-out {
  opacity:1;  /* make things invisible upon start */
  -webkit-animation:fadeOut ease-in 1;  /* call our keyframe named fadeOut, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeOut ease-in 1;
  animation:fadeOut ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}

.hidden {
  opacity: x0 !important;
  transition: opacity 2s linear;
}

.hide {
  display: none !important;
}

.fade-in.one {
  -webkit-animation-delay: 0.7s;
  -moz-animation-delay: 0.7s;
  animation-delay: 0.7s;
}

.fade-in.two {
  -webkit-animation-delay: 1.2s;
  -moz-animation-delay:1.2s;
  animation-delay: 1.2s;
}

.fade-in.three {
  -webkit-animation-delay: 1.6s;
  -moz-animation-delay: 1.6s;
  animation-delay: 1.6s;
}



